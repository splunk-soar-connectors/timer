{
    "appid": "7f714055-3a13-4f99-9b18-56efe30a3cb6",
    "name": "Timer",
    "description": "This app will generate an empty event which can be used to kick off a playbook at scheduled intervals",
    "type": "generic",
    "product_vendor": "Phantom",
    "logo": "logo_phantom.svg",
    "logo_dark": "logo_phantom_dark.svg",
    "product_name": "Timer",
    "product_version_regex": ".*",
    "publisher": "Splunk",
    "license": "Copyright (c) 2018-2019 Splunk Inc.",
    "app_version": "1.0.7",
    "utctime_updated": "2019-03-13T02:08:15.000000Z",
    "package_name": "phantom_timer",
    "main_module": "timer_connector.pyc",
    "min_phantom_version": "4.0.1068",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "event_name": {
            "description": "Name of the created event",
            "data_type": "string",
            "required": true,
            "order": 0,
            "default": "$label created on $now"
        },
        "create_artifact_instead": {
            "description": "Create artifact instead of event",
            "verbose": "Instead of creating a new event on interval, add an new artifact to an existing event. All event settings wil be applied to artifact instead",
            "data_type": "boolean",
            "required": false,
            "default": false,
            "order": 1
        },
        "existing_event_id": {
            "description": "Create artifact in existing event",
            "verbose": "If \"create_artifact_instead\" is set and existing_event_id is provided, add new artifacts to the provided existing event. If not not provided; at the first interval, the artifact will be added to a newly generated event which will be reused at the next interval",
            "data_type": "numeric",
            "required": false,
            "default": false,
            "order": 2
        },
        "create_artifact": {
            "description": "If creating event, add artifact to event",
            "data_type": "boolean",
            "order": 3,
            "default": false
        },
        "severity": {
            "description": "Severity of the created event",
            "data_type": "string",
            "optional": true,
            "value_list": [
                "high",
                "medium",
                "low"
            ],
            "order": 5,
            "default": "medium"
        },
        "sensitivity": {
            "description": "Sensitivity of the created event",
            "data_type": "string",
            "optional": true,
            "value_list": [
                "white",
                "green",
                "amber",
                "red"
            ],
            "order": 6,
            "default": "amber"
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "manage timer",
            "identifier": "manage_timer",
            "description": "manage timer app",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "action": {
                    "description": "management action to run",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "default": "get_saved_event_id",
                    "value_list": [
                        "get_saved_event_id",
                        "set_saved_event_id",
                        "clear_saved_event_id"
                    ],
                    "order": 0
                },
                "existing_event_id": {
                    "description": "If \"create_artifact_instead\" is set and existing_event_id is provided, add new artifacts to the provided existing event. If not not provided; at the first interval, the artifact will be added to a newly generated event which will be reused at the next interval",
                    "data_type": "numeric",
                    "required": false,
                    "default": false,
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.event_id",
                    "data_type": "numeric",
                    "column_name": "event_id",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.existing_event_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 0
                }
            ],
            "render": {
                "type": "table",
                "title": "timer"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "identifier": "on_poll",
            "description": "Create one empty event to kick off a playbook",
            "type": "ingest",
            "read_only": true,
            "parameters": {
                "start_time": {
                    "description": "Parameter Ignored in this app",
                    "data_type": "numeric",
                    "required": false,
                    "primary": false,
                    "order": 0
                },
                "end_time": {
                    "description": "Parameter Ignored in this app",
                    "data_type": "numeric",
                    "required": false,
                    "primary": false,
                    "order": 1
                },
                "container_id": {
                    "description": "Parameter Ignored in this app",
                    "data_type": "numeric",
                    "required": false,
                    "primary": false,
                    "order": 2
                },
                "container_count": {
                    "description": "Parameter Ignored in this app",
                    "data_type": "numeric",
                    "required": false,
                    "primary": false,
                    "order": 3
                },
                "artifact_count": {
                    "description": "Parameter Ignored in this app",
                    "data_type": "numeric",
                    "required": false,
                    "primary": false,
                    "order": 4
                }
            },
            "output": [],
            "versions": "EQ(*)"
        }
    ]
}
